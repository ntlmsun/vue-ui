/* Automatically generated by './build/bin/build-entry.js' */

import Layout from '../packages/layout/index.js';
import oAxiosInterceptor from '../shared/utils/axios/axios.js';
import { Startup } from '../shared/utils/axios/startup.js';
import mStore from '../shared/utils/store/index.js';
import Http from '../shared/utils/http/index.js';
import ElementUI from 'element-ui';
import Convert from '../shared/utils/convert/index.js';
import Cookie from '../shared/utils/cookie/index.js';
import Permission from '../shared/utils/init/permission.js';
import App from '../shared/utils/init/app.js';
import '../packages/icons/components';
import SvgIcon from 'vue-svgicon';
import Router from 'vue-router';
import * as directives from '../shared/directives';
import locale from 'msun-lib-ui/shared/locale';
import CollapseTransition from 'msun-lib-ui/shared/transitions/collapse-transition';

const components = [
  Layout,
  CollapseTransition
];

const install = function(Vue, opts = {}) {

  components.forEach(component => {
    Vue.component(component.name, component);
  });

  Object.keys(directives).forEach(key => {
    Vue.directive(key, directives[key])
  })

  Vue.prototype.$MSUN = {
    size: opts.size || '',
    zIndex: opts.zIndex || 2000
  }

  Vue.use(SvgIcon, {
    tagName: 'svg-icon',
    defaultWidth: '1em',
    defaultHeight: '1em'
  });

  Vue.use(ElementUI, {
    size: mStore.state.App.size,
    i18n: (key, value) => i18n.t(key, value)
  });

  Vue.use(Router);

  Vue.prototype.$convert = Convert;
  Vue.prototype.$http = Http;
  Vue.prototype.$cookie = Cookie;
  Vue.prototype.$mStore = mStore;

  oAxiosInterceptor.init();

  Startup.bootstrap();
}

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

export default {
  version: '0.1.0',
  locale: locale.use,
  i18n: locale.i18n,
  install,
  App,
  Http,
  Convert,
  Cookie,
  mStore,
  Permission,
  CollapseTransition,
  Layout
};
